library(tidyverse)
#heteroskedasticity test
df2 = df |>
filter(year >= 2016)
#load in data
df = readRDS("Data/complete_noavail90.rds")
#heteroskedasticity test
df2 = df |>
filter(year >= 2016)
#heteroskedasticity test
df2 = df |>
filter(year <= 2016)
#heteroskedasticity test
df2 = df |>
filter(year < 2016)
#variance of post2016
var(df1$inventory)
#filter for 2016 post
df1 = df |>
filter(year >= 2016)
#variance of post2016
var(df1$inventory)
#variance of pre2016
var(df2$inventory)
#variance of pre2016
var2 = var(df2$inventory)
#variance of post2016
var1  = var(df1$inventory)
#divide values
fstat = var1/var2
#divide values
fstat = var2/var1
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df2)
fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df2)
fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df2)
fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df2)
fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df2)
?feols
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df1)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df1)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df1)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df1)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df1)
print(a$ssr_fe_only)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df2)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df2)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df2)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df2)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df2)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
#load in data
df = readRDS("Data/complete_noavail85.rds")
df1 = df |>
filter(year>= 2016)
#run regression models
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df1)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df1)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df1)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df1)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df1)
print(a$ssr)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
df2 = df |>
filter(year < 2016)
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df2)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df2)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df2)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df2)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df2)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
Data
#load in data
df = readRDS("Data/complete_noavail90.rds")
df1 = df |>
filter(year >= 2016)
#run regression models
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df1)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df1)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df1)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df1)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df1)
df2 = df |>
filter(year < 2016)
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df2)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df2)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df2)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df2)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df2)
#load in data
df = readRDS("Data/complete_noavail75.rds")
df1 = df |>
filter(year >= 2016)
#run regression models
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df1)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df1)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df1)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df1)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df1)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
df2 = df |>
filter(year < 2016)
a = fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = df2)
b = fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | c + y, data = df2)
c = fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | c + y, data = df2)
d = fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | c + y, data = df2)
e = fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | c + y, data = df2)
print(a$ssr)
print(a$ssr)
print(b$ssr)
print(c$ssr)
print(d$ssr)
print(e$ssr)
#checking trends for states treated pre-2016 only for the post-2016 and all time periods
df3 = df |>
filter(g != 2016)
#load in data
df = readRDS("Data/complete_noavail90.rds")
#checking trends for states treated pre-2016 only for the post-2016 and all time periods
mega = readRDS("Data/complete90.rds")
mega1 = mega |>
filter(g != 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | c + y, data = mega1)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
table(mega$g)
mega2 = mega1 |>
filter(year >=2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~log(liab) + precip + palmer + hay_prod | fips + year, data = mega2)
fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~log(net_rep_quant) + precip + palmer + hay_prod | fips + year, data = mega2)
fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~log(idem) + precip + palmer + hay_prod | fips + year, data = mega2)
fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~lossR + precip + palmer + hay_prod | fips + year, data = mega2)
mega1 = mega |>
filter(g = 2016)
mega1 = mega |>
filter(g == 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
mega2 = mega1 |>
filter(year >= 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
table(mega$g)
mega1 = mega |>
filter(g == 2007)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
mega1 = mega |>
filter(g == 2008)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
mega2 = mega1 |>
filter(year >= 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
mega1 = mega |>
filter(g == 2009)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
mega2 = mega1 |>
filter(year >= 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
table(mega$g)
mega1 = mega |>
filter(g == 2011)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
mega2 = mega1 |>
filter(year >= 2016)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
mega1 = mega |>
filter(g == 2012)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega1)
fixest::feols(fml = log(inventory)~log(subsidy) + precip + palmer + hay_prod | fips + year, data = mega2)
ggplot(data = mega, aes(x = inventory, y = year, color = g)) +
geom_line()
ggplot(data = mega, aes(x = year, y = inventory, color = g)) +
geom_point()
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2007)
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2008)
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2009)
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2011)
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2012)
mean(mega1$inventory)
mega1 = mega |>
filter(g == 2016)
mean(mega1$inventory)
readRDS(merge_final)
setwd("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data")
readRDS("Merging/merge_final")
.rds
readRDS("Merging\merge_final.rds")
readRDS("Merging/merge_final.rds")
load("Merging/merge_final.Rdata")
skim(merge_final)
merge_final1 = merge_final |>
filter(is.na(eth.production) | is.na(corn.production) | is.na(corn.prices))
View(merge_final1)
merge_final2 = merge_final |>
fill(eth.production, .direction = 'up')
skim(merge_final2)
merge_final2 = merge_final |>
fill(eth.production, .direction = 'up') |>
fill(corn.production, .direction = "up") |>
fill(corn.prices, .direction = "up")
skim(merge_final2)
ggplot(merge_final) +
geom_density(aes(corn.prices)) +
geom_density(aes(corn.production)) +
geom_density(aes(eth.production))
ggplot(merge_final) +
geom_density(aes(corn.prices))
ggplot(merge_final2) +
geom_density(aes(corn.prices))
ggplot(merge_final) +
geom_density(aes(corn.production))
ggplot(merge_final2) +
geom_density(aes(corn.production))
ggplot(merge_final) +
geom_density(aes(eth.production))
ggplot(merge_final2) +
geom_density(aes(eth.production))
summary(merge_final)
summary(merge_final2$corn.prices)
summary(merge_final$corn.prices)
summary(merge_final$corn.production)
summary(merge_final2$corn.production)
summary(merge_final$eth.production)
summary(merge_final2$eth.production)
merge_final2 = merge_final |>
group_by(state) |>
sort(year, decreasing = FALSE)
View(merge_final2)
merge_final2 = merge_final |>
group_by(state) |>
sort(year, decreasing = TRUE)
View(merge_final2)
merge_final2 = merge_final |>
group_by(state) |>
sort(year, decreasing = TRUE) |>
fill(eth.production, .direction = 'up') |>
fill(corn.production, .direction = "up") |>
fill(corn.prices, .direction = "up") |>
ungroup()
merge_final2 = merge_final |>
group_by(state) |>
arrange(year, decreasing = TRUE)
merge_final2 = merge_final |>
arrange(year, decreasing = TRUE) |>
group_by(state)
merge_final2 = merge_final |>
group_by(state)
merge_final2 = merge_final |>
group_by(state)  |>
arrange(year, decreasing = TRUE)
merge_final2 = merge_final |>
arrange(year, decreasing = TRUE)|>
group_by(state)
merge_final2 = merge_final |>
group_by(state)  |>
arrange(year, decreasing = TRUE)
merge_final2 = merge_final |>
group_by(state)  |>
arrange(year, decreasing = TRUE)|>
fill(eth.production, .direction = 'up') |>
fill(corn.production, .direction = "up") |>
fill(corn.prices, .direction = "up") |>
ungroup()
View(merge_final2)
merge_final2 = merge_final |>
group_by(state)  |>
fill(eth.production, .direction = 'up') |>
fill(corn.production, .direction = "up") |>
fill(corn.prices, .direction = "up") |>
ungroup()
merge_final2 = merge_final |>
group_by(state)  |>
fill(eth.production, .direction = 'down') |>
fill(corn.production, .direction = "down") |>
fill(corn.prices, .direction = "down") |>
ungroup()
merge_final2 = merge_final |>
group_by(state)  |>
arrange(year, decreasing = TRUE)|>
fill(eth.production, .direction = 'down') |>
fill(corn.production, .direction = "down") |>
fill(corn.prices, .direction = "down") |>
ungroup()
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
fill(eth.production, .direction = 'down') |>
fill(corn.production, .direction = "down") |>
fill(corn.prices, .direction = "down") |>
ungroup()
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
fill(eth.production, .direction = 'down') |>
fill(corn.production, .direction = "down") |>
fill(corn.prices, .direction = "down") |>
ungroup()
merge_final3 = merge_final2 |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
fill(eth.production, .direction = 'up') |>
fill(corn.production, .direction = "up") |>
fill(corn.prices, .direction = "up") |>
ungroup()
View(merge_final3)
merge_final4 <- merge_final3 |>
mutate_all(~replace_na(., 0))
View(merge_final4)
ggplot(merge_final) +
geom_density(aes(corn.prices))
ggplot(merge_final4) +
geom_density(aes(corn.prices))
summary(merge_final$corn.prices)
summary(merge_final4$corn.prices)
merge_final4 <- merge_final3 |>
mutate_at(vars(eth.production, corn.production), ~replace_na(., 0))
ggplot(merge_final) +
geom_density(aes(corn.prices))
ggplot(merge_final4) +
geom_density(aes(corn.prices))
summary(merge_final$corn.prices)
summary(merge_final4$corn.prices)
check = merge_final4 |>
filter(is.na(corn.prices))
check(table$state)
table(check$state)
ggplot(merge_final) +
geom_density(aes(corn.production))
ggplot(merge_final4) +
geom_density(aes(corn.production))
summary(merge_final$corn.production)
summary(merge_final4$corn.production)
ggplot(merge_final) +
geom_density(aes(eth.production))
ggplot(merge_final4) +
geom_density(aes(eth.production))
summary(merge_final$eth.production)
summary(merge_final4$eth.production)
merge_final5 = merge_final4 |>
mutate_at(vars(corn.prices), ~replace_na(., mean(corn.prices)))
View(merge_final5)
mean(merge_final4$corn.prices)
merge_final5 = merge_final4 |>
mutate_at(vars(corn.prices), ~replace_na(., mean(corn.prices, na.rm = TRUE)))
mean(merge_final4$corn.prices, na.rm = TRUE)
ggplot(merge_final) +
geom_density(aes(corn.prices))
ggplot(merge_final5) +
geom_density(aes(corn.prices))
summary(merge_final$corn.prices)
summary(merge_final5$corn.prices)
ggplot(merge_final) +
geom_density(aes(corn.production))
ggplot(merge_final5) +
geom_density(aes(corn.production))
summary(merge_final$corn.production)
summary(merge_final5$corn.production)
ggplot(merge_final) +
geom_density(aes(eth.production))
ggplot(merge_final5) +
geom_density(aes(eth.production))
summary(merge_final$eth.production)
summary(merge_final5$eth.production)
save("Merging/merge_final_missingreplaced.Rdata")
save(merge_final5, "Merging/merge_final_missingreplaced.Rdata")
save(merge_final5, "Merging/merge_final_missingreplaced.RData")
save(merge_final5, file = "Merging/merge_final_missingreplaced.RData")
simple = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices, data = merge_final)
summary(simple)
simple_nocontrols = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations, data = merge_final)
summary(simple_nocontrols)
simple = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices, data = merge_final)
summary(simple)
simple_nocontrols = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations, data = merge_final)
summary(simple_nocontrols)
#run regression with state and year fixed effects
fe = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices| year + state_abb, data = merge_final)
summary(fe)
fe_nocontrols = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations | year + state_abb, data = merge_final)
summary(fe_nocontrols)
merge_final = load("Merging/merge_final_missingreplaced.RData")
simple = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices, data = merge_final)
load("Merging/merge_final_missingreplaced.RData")
load("Merging/merge_final_missingreplaced.RData")
load("~/GitHub/ECNS561.TermProject.Ethanol/Data/Merging/merge_final_missingreplaced.RData")
merge_final5 = merge_final
load("Merging/merge_final_missingreplaced.RData")
merge_final = merge_final5
simple = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices, data = merge_final)
summary(simple)
simple_nocontrols = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations, data = merge_final)
summary(simple_nocontrols)
#run regression with state and year fixed effects
fe = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices| year + state_abb, data = merge_final)
summary(fe)
fe_nocontrols = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations | year + state_abb, data = merge_final)
summary(fe_nocontrols)
load("Merging/merge_final.RData")
simple = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices, data = merge_final)
summary(simple)
simple_nocontrols = lm(e85 ~ tax_incentives + grant_incentives + other_incentives + regulations, data = merge_final)
summary(simple_nocontrols)
#run regression with state and year fixed effects
fe = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations + total_stations + eth.production + corn.production + corn.prices| year + state_abb, data = merge_final)
summary(fe)
fe_nocontrols = feols(e85~ tax_incentives+ grant_incentives + other_incentives + regulations | year + state_abb, data = merge_final)
summary(fe_nocontrols)
table(merge_final5$year)
load("Merging/merge_final.RData")
#create lagged variables to account for time needed to build e85 stations
merge_final2 = merge_final |>
mutate(incentives_lag1 = lag(incentives, n = 1),
incentives_lag2 = lag(incentives, n = 2),
incentives_lag3 = lag(incentives, n = 3),
regulations_lag1 = lag(regulations, n = 1),
regulations_lag2 = lag(regulations, n = 2),
regulations_lag3 = lag(regulations, n = 3))
View(merge_final2)
#create lagged variables to account for time needed to build e85 stations
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
mutate(incentives_lag1 = lag(incentives, n = 1),
incentives_lag2 = lag(incentives, n = 2),
incentives_lag3 = lag(incentives, n = 3),
regulations_lag1 = lag(regulations, n = 1),
regulations_lag2 = lag(regulations, n = 2),
regulations_lag3 = lag(regulations, n = 3)) |>
ungroup()
View(merge_final2)
#create lagged variables to account for time needed to build e85 stations
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = FALSE)|>
mutate(incentives_lag1 = lag(incentives, n = 1),
incentives_lag2 = lag(incentives, n = 2),
incentives_lag3 = lag(incentives, n = 3),
regulations_lag1 = lag(regulations, n = 1),
regulations_lag2 = lag(regulations, n = 2),
regulations_lag3 = lag(regulations, n = 3)) |>
ungroup()
#create lagged variables to account for time needed to build e85 stations
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
mutate(incentives_lag1 = lead(incentives, n = 1),
incentives_lag2 = lead(incentives, n = 2),
incentives_lag3 = lead(incentives, n = 3),
regulations_lag1 = lead(regulations, n = 1),
regulations_lag2 = lead(regulations, n = 2),
regulations_lag3 = lead(regulations, n = 3)) |>
ungroup()
simple2 = lm(e85 ~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 + total_stations + eth.production + corn.production + corn.prices, data = merge_final2)
summary(simple2)
simple_nocontrols2 = lm(e85 ~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3, data = merge_final2)
summary(simple_nocontrols2)
fe2 = feols(e85~incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 + total_stations + eth.production + corn.production + corn.prices| year + state_abb, data = merge_final2)
summary(fe2)
fe_nocontrols2 = feols(e85~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 | year + state_abb, data = merge_final2)
summary(fe_nocontrols2)
#create lagged variables to account for time needed to build e85 stations
merge_final2 = merge_final |>
group_by(state)  |>
arrange(state, year, decreasing = TRUE)|>
mutate(incentives_lag1 = lag(incentives, n = 1),
incentives_lag2 = lag(incentives, n = 2),
incentives_lag3 = lag(incentives, n = 3),
regulations_lag1 = lag(regulations, n = 1),
regulations_lag2 = lag(regulations, n = 2),
regulations_lag3 = lag(regulations, n = 3)) |>
ungroup()
simple2 = lm(e85 ~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 + total_stations + eth.production + corn.production + corn.prices, data = merge_final2)
summary(simple2)
simple_nocontrols2 = lm(e85 ~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3, data = merge_final2)
summary(simple_nocontrols2)
fe2 = feols(e85~incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 + total_stations + eth.production + corn.production + corn.prices| year + state_abb, data = merge_final2)
summary(fe2)
fe_nocontrols2 = feols(e85~ incentives + incentives_lag1 + incentives_lag2 + incentives_lag3 + regulations + regulations_lag1 + regulations_lag2 + regulations_lag3 | year + state_abb, data = merge_final2)
summary(fe_nocontrols2)
